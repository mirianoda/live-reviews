"use client";

import { useState } from "react";
import { supabase } from "@/lib/supabase";
import { useRouter } from "next/navigation";

export default function AuthPage() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const router = useRouter();

// „Çµ„Ç§„É≥„Ç¢„ÉÉ„ÉóÂá¶ÁêÜ
const handleSignUp = async () => {
  const { data, error } = await supabase.auth.signUp({
    email,
    password,
  });

  if (error) {
    alert("„Ç®„É©„Éº: " + error.message);
    return;
  }

  if (data.user) {
    // üîπ `users` „ÉÜ„Éº„Éñ„É´„Å´„Éá„Éº„Çø„ÇíËøΩÂä†
    const { error: userError } = await supabase.from("users").insert([
      {
        id: data.user.id, // üî• auth.users „ÅÆ ID „Çí users „ÉÜ„Éº„Éñ„É´„Å´„Ç≥„Éî„Éº
        username: email.split("@")[0], // ‰ªÆ„ÅÆ„É¶„Éº„Ç∂„ÉºÂêçÔºà„É°„Éº„É´„ÅÆ@Ââç„Çí‰Ωø„ÅÜÔºâ
        avatar_url: "",
      },
    ]);

    if (userError) {
      alert("„É¶„Éº„Ç∂„Éº„Éá„Éº„Çø„ÅÆ‰øùÂ≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: " + userError.message);
    } else {
      alert("ÁôªÈå≤ÊàêÂäüÔºÅ„É≠„Ç∞„Ç§„É≥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
    }
  }
};

  // „É≠„Ç∞„Ç§„É≥Âá¶ÁêÜ
  const handleSignIn = async () => {
    const { data, error } = await supabase.auth.signInWithPassword({
      email,
      password,
    });

    if (error) {
      alert("„Ç®„É©„Éº: " + error.message);
    } else {
      alert("„É≠„Ç∞„Ç§„É≥ÊàêÂäüÔºÅ");
      router.push("/");
    }
  };

  return (
    <div className="max-w-md mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg">
      <h1 className="text-2xl font-bold mb-4">„É≠„Ç∞„Ç§„É≥ / „Çµ„Ç§„É≥„Ç¢„ÉÉ„Éó</h1>
      <input
        type="email"
        placeholder="„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ"
        className="w-full p-2 border rounded mb-2"
        onChange={(e) => setEmail(e.target.value)}
      />
      <input
        type="password"
        placeholder="„Éë„Çπ„ÉØ„Éº„Éâ"
        className="w-full p-2 border rounded mb-2"
        onChange={(e) => setPassword(e.target.value)}
      />
      <button onClick={handleSignUp} className="w-full bg-blue-500 text-white p-2 rounded">
        „Çµ„Ç§„É≥„Ç¢„ÉÉ„Éó
      </button>
      <button onClick={handleSignIn} className="w-full bg-green-500 text-white p-2 rounded mt-2">
        „É≠„Ç∞„Ç§„É≥
      </button>
    </div>
  );
}
